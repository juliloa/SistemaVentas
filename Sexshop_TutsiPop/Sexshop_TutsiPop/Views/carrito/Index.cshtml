@model IEnumerable<Sexshop_TutsiPop.Models.ProductosCarritoInfo>
@{
    Layout = null;
}


<h1>Tu Carrito de Compras</h1>
<link rel="stylesheet" href="/css/Carrito.css" />
<div class="container">
    <div class="row mt-5 pt-5 p-2">
        <!-- Columna de productos -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <span class="ml-2">Detalle Compra</span>
                        <a class="btn btn-danger" href="@Url.Action("IndexUsuario", "Home")">Volver</a>
                    </div>
                    <hr class="mt-2 mb-2">
                    <div class="justify-content-start mb-2">
                        Tienes <span id="cantidad-articulos" class="ml-1">@Model.Count()</span> artículo(s) en tu carrito
                    </div>
                    <div id="productos-seleccionados">
                        @foreach (var item in Model)
                        {
                            <div class="row mb-3">
                                <div class="col-6">@item.ProductoNombre</div>
                                <div class="col-3 d-flex align-items-center">
                                  
                                        <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity(@item.CarritoId, -1)">-</button>
                                        <span class="mx-2" id="cantidad-@item.CarritoId" data-stock="@item.Stock">@item.Cantidad</span>
                                        <button class="btn btn-outline-secondary btn-sm" onclick="updateQuantity(@item.CarritoId, 1)"
                                        @(item.Cantidad >= item.Stock ? "disabled" : "")>
                                            +
                                        </button>
                                </div>
                                <div class="col-3">
                                    <div class="precio-unitario">
                                        <small>Precio unitario:</small>
                                        <span id="precio-unitario-@item.CarritoId">@item.Precio.ToString("C")</span>
                                    </div>
                                    <div class="precio-total mt-2">
                                        <small>Total:</small>
                                        <span id="precio-total-@item.CarritoId">@(item.Precio * item.Cantidad).ToString("C")</span>
                                    </div>
                                </div>
                            </div>
                            <form asp-area="" asp-controller="carrito" asp-action="Delete" asp-route-id="@item.CarritoId" method="post">
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash-alt"></i> Eliminar
                                </button>
                            </form>
                        }

                    </div>
                    <!-- Total del carrito -->
                    <div class="d-flex justify-content-between mt-4">
                        <strong>Total Carrito: </strong>
                        <span id="total-carrito">$0.00</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Columna de direcciones -->
        <div class="col-md-4">
            <div class="card bg-light">
                <div class="card-body">
                    <!-- Título -->
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="font-weight-bold">Dirección de Envío</span>
                    </div>

                    <!-- Formulario de Dirección -->
                    <form id="direccion-form" action="@Url.Action("GuardarDireccion", "Carrito")" method="post">
                        <div class="form-group">
                            <label for="direccionCalle">Calle</label>
                            <input type="text" class="form-control" id="direccion_calle" name="direccion_calle" required>
                        </div>
                        <div class="form-group">
                            <label for="barrio">Barrio</label>
                            <input type="text" class="form-control" id="barrio" name="barrio">
                        </div>
                        <div class="form-group">
                            <label for="ciudad">Ciudad</label>
                            <input type="text" class="form-control" id="ciudad" name="ciudad" required>
                        </div>
                        <div class="form-group">
                            <label for="codigoPostal">Código Postal</label>
                            <input type="text" class="form-control" id="codigo_postal" name="codigo_postal">
                        </div>
                        <div class="form-group">
                            <label for="pais">País</label>
                            <input type="text" class="form-control" id="pais" name="pais" required>
                        </div>
                        <button type="submit"
                                class="btn btn-primary"
                                style="background-color: transparent; border: 2px solid #004d70; color: #004d70; font-weight: 600; text-transform: uppercase; padding: 10px 20px; border-radius: 5px; transition: background-color 0.3s, color 0.3s; margin-top: 5px;"
                                onmouseover="this.style.backgroundColor='#004d70'; this.style.color='white';"
                                onmouseout="this.style.backgroundColor='transparent'; this.style.color='#004d70';">
                            Guardar y continuar compra
                        </button>

                       
                    </form>

                    <div id="txtDireccion guardada" class="mt-3"></div>

                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> <!-- Incluye SweetAlert2 -->

                    <script>
                        // Capturamos el envío del formulario
                        $("#direccion-form").submit(function (event) {
                            event.preventDefault(); // Evita que el formulario se envíe de manera tradicional

                            var formData = $(this).serialize(); // Obtén los datos del formulario

                            // Enviar los datos con AJAX
                            $.ajax({
                                url: $(this).attr('action'), // URL del controlador
                                type: 'POST',
                                data: formData, // Datos del formulario
                                success: function (response) {
                                    if (response.success) {
                                        // Mostrar mensaje de éxito con SweetAlert2
                                        Swal.fire({
                                            icon: "success",
                                            title: "¡Dirección guardada!",
                                            text: response.message,
                                            showConfirmButton: false,
                                            timer: 1500,
                                        });

                                        // Limpiar el formulario
                                        $("#direccion-form")[0].reset();
                                    } 
                                },
                                error: function () {
                                    Swal.fire({
                                        icon: "error",
                                        title: "Error",
                                        text: "Hubo un problema al guardar la dirección. Intenta nuevamente.",
                                    });
                                }
                            });
                        });
                    </script>

                </div>
            </div>
        </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var totalCarrito = 0;
        $('#productos-seleccionados span[id^="precio-total-"]').each(function () {
            var carritoId = $(this).attr('id').split('-')[2];
            var cantidad = parseInt($('#cantidad-' + carritoId).text());
            var precioUnitario = parseFloat($('#precio-unitario-' + carritoId).text().replace('$', '').replace(',', ''));
            var precioTotal = cantidad * precioUnitario;

            // Mostrar el precio total de cada producto
            $('#precio-total-' + carritoId).text('$' + precioTotal.toFixed(2));

            // Sumar al total del carrito
            totalCarrito += precioTotal;
        });

        // Mostrar el total del carrito
        $('#total-carrito').text('$' + totalCarrito.toFixed(2));
    });

    function updateQuantity(carritoId, cambio) {
        var cantidadElement = document.getElementById("cantidad-" + carritoId);
        var precioUnitario = parseFloat(document.getElementById("precio-unitario-" + carritoId).innerText.replace('$', '').replace(',', ''));
        var stock = parseInt($('#cantidad-' + carritoId).attr('data-stock'));  // Aquí se obtiene el stock disponible
        var cantidadActual = parseInt(cantidadElement.innerText); //
        const nuevaCantidad = cantidadActual + cambio;

        if (nuevaCantidad < 1) return; // Evita que la cantidad sea menor a 1
        if (nuevaCantidad > stock) return; // Evita que la cantidad sea mayor que el stock

        cantidadElement.innerText = nuevaCantidad;//

        var nuevoPrecioTotal = nuevaCantidad * precioUnitario; // Calcula el nuevo precio total
        document.getElementById("precio-total-" + carritoId).innerText = "$" + nuevoPrecioTotal.toFixed(2);

        // Actualizar el total del carrito
        var totalCarrito = 0;
        $('#productos-seleccionados span[id^="precio-total-"]').each(function () {
            totalCarrito += parseFloat($(this).text().replace('$', '').replace(',', ''));
        });

        // Actualizar el total general del carrito
        $('#total-carrito').text('$' + totalCarrito.toFixed(2));

        // Envía la actualización de la cantidad al servidor para ajustar el stock
        var token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: '@Url.Action("UpdateQuantity", "carrito")',
            type: 'POST',
            data: {
                carritoId: carritoId,
                nuevaCantidad: nuevaCantidad,
                __RequestVerificationToken: token
            },
            success: function (response) {
                if (response.success) {
                    cantidadElement.innerText = nuevaCantidad;
                } else {
                    alert("Error al actualizar la cantidad");
                }
            },
            error: function () {
                alert("Ocurrió un error al intentar actualizar la cantidad.");
            }
        });
    }


</script>
